name: Terraform Destroy

on:
  workflow_dispatch:
    inputs:
      confirm_destroy:
        description: "Type YES to confirm destruction of all infrastructure"
        required: true
        default: "NO"

jobs:
  destroy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # These secrets must be configured in your GitHub repository settings
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # The AWS_REGION is pulled from a higher-level environment variable (e.g., from your main CI/CD workflow env)
          # or an explicit env block in this job if needed.
          aws-region: us-east-1 

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7 # Pinning to a specific Terraform version is good practice

      - name: Terraform Init
        # Using the dev environment configuration
        run: terraform -chdir=infra/environments/dev init

      - name: Confirm destroy
        # This step acts as a safety gate, requiring explicit confirmation.
        run: |
          if [ "${{ github.event.inputs.confirm_destroy }}" != "YES" ]; then
            echo "You must type YES in the confirmation box to proceed with destroy." >&2
            exit 1 # Exits the job with a failure, preventing destruction
          fi

      - name: Echo warning
        # A simple warning message, now using the preferred literal block scalar for consistency.
        run: | 
          echo "WARNING: Destroying all infrastructure in this environment!"

      - name: Terraform Destroy
        # Executes the Terraform destroy command to tear down resources.
        # -auto-approve is used here because the 'confirm_destroy' input serves as a manual gate.
        run: |
          terraform -chdir=infra/environments/dev destroy -auto-approve
        # Note: AWS_REGION is inherited from the 'configure-aws-credentials' step's environment.